china$conf_armyd <- ifelse(V109 >= 3, 0, ifelse(V109 == 1 | V109 == 2, 1, NA))
china$conf_policed <- ifelse(V113 >= 3, 0, ifelse(V113 == 1 | V113 == 2, 1, NA))
china$conf_courtsd <- ifelse(V114 >= 3, 0, ifelse(V114 == 1 | V114 == 2, 1, NA))
china$conf_polpartyd <- ifelse(V116 >= 3, 0, ifelse(V116 == 1 | V114 == 2, 1, NA))
china <- rename(china, c(V217 = "newspaper", V219 = "tv", V223 = "internet", V141 = "dem_assessment"))
detach(china)
#satisfaction w/ life (1-10)
china$lifesatis <- china$V23
#generalized trust old
china$gtrust1 <- ifelse(china$trust == 1, 1, ifelse(china$trust == 2, 0, NA))
table(china$trust)
#pol party member
table(china$assn_party)
china$polparty <- ifelse(china$assn_party > 0, 1, ifelse(china$assn_party == 0, 0, NA))
#pride in country
china$patriot <- ifelse(china$proud_nation >= 3, 0, ifelse(china$proud_nation == 1 | china$proud_nation == 2, 1, NA))
china$tv <- china$tv - 5
china$newspaper <- china$newspaper - 5
china$radio <- china$V220 - 5
china$internet <- china$internet - 5
#make into factors
#questions for hierarchy
china$obedient_child <- ifelse(china$V21 == 1, 1, ifelse(china$V21 == 2, 0, NA))
china$authority_respect <- ifelse(china$V69 == 1, 1, ifelse(china$V69 == 2, 0.5, ifelse(china$V69 == 3, 0, NA)))
china$authority <- china$obedient_child + china$authority_respect
#performance evaluation
#how important is economic growth vs strong defense, say in gov, make country more beautiful
china$econ_imp <- ifelse(china$V60 == 1, 1, ifelse(china$V61 == 1, 0.5, ifelse(is.na(china$V60) == TRUE & is.na(china$V61)== TRUE, NA, 0)))
write.csv(china, file = "wvs_20141113.csv")
write.csv(china, file = "wvs_20141208.csv")
setwd("C:/Users/j/Projects/Dissertation/WVS")
write.csv(china, file = "wvs_20141208.csv")
setwd("C:/Users/j/Dropbox/Projects/Dissertation/WVS")
setwd("C:/Dropbox/Projects/Dissertation/WVS")
write.csv(china, file = "wvs_20141208.csv")
wvs <- read.csv(file = "wvs_20141208.csv", stringsAsFactors = FALSE)
setwd("C:/Dropbox/Projects/Dissertation/WVS/trust.app")
setwd("C:/Dropbox/Projects/Dissertation/WVS/trust.app")
wvs <- read.csv(file = "wvs_20141208.csv", stringsAsFactors = FALSE)
rm(china)
names(wvs)
View(wvs)
list <- read.csv(file = "WVSw6_list.csv")
names(list)
list <- read.csv(file = "WVSw6_list.csv")
names(list)
wvs <- merge(wvs, list, by = c("cid"), all.x = TRUE)
countries <- unique(wvs$country)
countries
list <- read.csv(file = "WVSw6_list.csv", stringsAsFactors = FALSE)
wvs <- merge(wvs, list, by = c("cid"), all.x = TRUE)
countries <- unique(wvs$country)
59*2+25
library("devtools")
library(roxygen2)
library(football2)
weekly_update <- function(week, bye = 0) {
#this scrapes and returns complete dataset including previous weeks
require(plyr)
data <- get_urls(bye, week)
data_t <- data[[1]]
data_p <- data[[2]]
#get list of winners
#dataw <- subset(data_t, WEEK == week)
#dataw <- subset(dataw, is.na(score_for) == FALSE)
#winners <- vector(mode = "character", length = 0)
#for (i in 1:dim(dataw)[1]) {
#        if(dataw[i, "score_for"] > dataw[i, "score_against"]) winners <- c(winners, dataw[i, "team"])
#}
##write winners to file
#setwd("C:/Dropbox/Google Drive/Personal/football/season2014/pickem")
#winners_file <- paste("winners_wk", as.character(week), ".csv", sep = "")
#write.csv(winners, file = winners_file)
#pickem
#pickem(week = week)
#cumulative stats
setwd("C:/Dropbox/Projects/football/season2014/predictions")
old_file <- paste("wk", as.character(week - 1), ".csv", sep ="")
if (week != 1) {
old <- read.csv(old_file, stringsAsFactors = FALSE)
if (dim(old)[2] != dim(data_t)[2]) {
old <- old[, -1]
data2 <- rbind(data_t, old)
}
else data2 <- rbind(data_t, old)
} else  data2 <- data_t
data2 <- data2[order(data2$WEEK, data2$team),]
data2_na <- subset(data2, is.na(pyds_net_att) == FALSE)
attach(data2)
d <- ddply(data2, .(team), summarize, pyds_net_att = (sum(pyds, na.rm = TRUE) + sum(sack_yds, na.rm = TRUE) - 45*sum(int, na.rm = TRUE))/sum(p_atts, na.rm = TRUE),
defryds_att = sum(defryds, na.rm = TRUE)/sum(defr_att, na.rm = TRUE), penalty_yds_play = sum(penalty_yds, na.rm = TRUE)/sum(plays, na.rm = TRUE),
ryds_att = sum(ryds, na.rm = TRUE)/sum(r_atts, na.rm = TRUE), int_att = sum(int, na.rm = TRUE)/sum(p_atts, na.rm = TRUE),
fumbles_play = sum(fumbles, na.rm = TRUE)/sum(plays, na.rm = TRUE), defpyds_net_att = sum(defpyds_net, na.rm = TRUE)/sum(defpass_atts, na.rm = TRUE))
detach(data2)
d_thiswk <- subset(data2, WEEK == week) #need to fix this for bye weeks
d_thiswk <- d_thiswk[order(d_thiswk$opponent),]
d_thiswk <- subset(d_thiswk, !duplicated(d_thiswk$team))
if(bye > 0) {
d_thiswk2 <- add_byes(d_thiswk, week)
} else d_thiswk2 <- d_thiswk
d_thiswk2 <- d_thiswk2[order(d_thiswk2$team),]
d <- subset(d, is.na(ryds_att) == FALSE)
d <- d[order(d$team),]
d_thiswk2$pyds_net_att <- d$pyds_net_att
d_thiswk2$defryds_att <- d$defryds_att
d_thiswk2$penalty_yds_play <- d$penalty_yds_play
d_thiswk2$ryds_att <- d$ryds_att
d_thiswk2$int_att <- d$int_att
d_thiswk2$fumbles_play <- d$fumbles_play
d_thiswk2$defpyds_net_att <- d$defpyds_net_att
d3 <- rbind(old, d_thiswk2)
#power ranks
#data_final <- power_ranks(d3, week)
filename <- paste("C:/Dropbox/Projects/football/season2014/predictions/wk",
as.character(week), ".csv", sep = "")
write.csv(d3, file = filename)
#player data
setwd("C:/Dropbox/Projects/football/season2014")
player_file_o <- paste("player_data_wk", as.character(week - 1), ".csv", sep = "")
player_file_n <- paste("player_data_wk", as.character(week), ".csv", sep = "")
data_o <- read.csv(player_file_o)
if (dim(data_o)[2] != dim(data_p)[2]) {
data_o <- data_o[, -1]
data_p2 <- rbind(data_p, data_o)
} else data_p2 <- rbind(data_p, data_o)
write.csv(data_p2, file = player_file_n)
#player_alerts(data_p, week)
}
add_byes <- function(data, wk) {
#rows are already added
bye_t <- read.csv(file = "C:/Dropbox/Projects/football/schedule_map2014.csv")
byes <- subset(bye_t, week == wk)
for (i in 1: byes$byes) {
var <- paste("team", as.character(i), sep = "")
data[33 - i, "team"] <- as.character(byes[,var])
}
return(data)
}
weekly_update(14, bye = 0)
predictions(14)
setwd("C:/Dropbox/Projects/Dissertation/WVS/trust.app")
wvs <- read.csv(file = "wvs_20141208.csv", stringsAsFactors = FALSE)
list <- read.csv(file = "WVSw6_list.csv", stringsAsFactors = FALSE)
wvs <- merge(wvs, list, by = c("cid"), all.x = TRUE)
countries <- unique(wvs$country)
c = 1
d <- wvs %>%
filter(wvs$country == countries[c])
library(plyr)
library(dplyr)
library(ggvis)
countries
wvs <- wvs %>%
filter(is.na(country) == FALSE)
names(list)
list <- read.csv(file = "WVSw6_list.csv", stringsAsFactors = FALSE)
wvs <- merge(wvs, list, by = c("cid"), all.x = TRUE)
names(list)
class(wvs$survey.year)
wvs$country.year <- paste(wvs$country, survey.year, sep = " - ")
countries <- unique(wvs$country.year)
wvs$country.year <- paste(wvs$country, wvs$survey.year, sep = " - ")
countries <- unique(wvs$country.year)
?within
for (c in 1:length(countries)) {
d <- wvs %>%
filter(wvs$country == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = wvs, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = , ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.yr"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(p$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(p$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
}
for (c in 1:length(countries)) {
d <- wvs %>%
filter(wvs$country == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = , ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.yr"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(p$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(p$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
}
c = 1
d <- wvs %>%
filter(wvs$country.yr == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = , ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.yr"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(p$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(p$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
d <- wvs %>%
filter(wvs$country.yr == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
c
countries[c]
setwd("C:/Dropbox/Projects/Dissertation/WVS/trust.app")
wvs <- read.csv(file = "wvs_20141208.csv", stringsAsFactors = FALSE)
list <- read.csv(file = "WVSw6_list.csv", stringsAsFactors = FALSE)
wvs <- merge(wvs, list, by = c("cid"), all.x = TRUE)
wvs <- wvs %>%
filter(is.na(country) == FALSE)
wvs$country.year <- paste(wvs$country, wvs$survey.year, sep = " - ")
countries <- unique(wvs$country.year)
countries
c = 1
d <- wvs %>%
filter(wvs$country.yr == countries[c])
d <- wvs %>%
filter(wvs$country.year == countries[c])
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = , ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.yr"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(p$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(p$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
setwd("C:/Dropbox/Projects/Dissertation/WVS/trust.app")
wvs <- read.csv(file = "wvs_20141208.csv", stringsAsFactors = FALSE)
list <- read.csv(file = "WVSw6_list.csv", stringsAsFactors = FALSE)
wvs <- merge(wvs, list, by = c("cid"), all.x = TRUE)
wvs <- wvs %>%
filter(is.na(country) == FALSE)
wvs$country.year <- paste(wvs$country, wvs$survey.year, sep = " - ")
countries <- unique(wvs$country.year)
c
c = 1
d <- wvs %>%
filter(wvs$country.year == countries[c])
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
p <- data.frame(matrix(nrow = , ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.year"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(p$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(p$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
58*3
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.year"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(p$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(p$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
} else data_predict <- rbind(data_predict, p2)
p2 <- within(p, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
confint.default(m)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p2, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
for (c in 1:length(countries)) {
d <- wvs %>%
filter(wvs$country.year == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.year"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(p$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(p$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p2, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
}
View(data_predict)
c = 1
d <- wvs %>%
filter(wvs$country.year == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.year"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(p$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(p$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
View(p)
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.year"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(d$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(p$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
View(p)
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.year"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(d$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(d$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
View(p)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p2, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
for (c in 1:length(countries)) {
d <- wvs %>%
filter(wvs$country.year == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.year"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(d$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(d$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p2, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
}
View(data_predict)
c = 1
d <- wvs %>%
filter(wvs$country.year == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("country.yr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$country.yr <- p[1, "country.year"]
View(p)
names(p)
colnames(p) <- c("countryyr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$countryyr <- d[1, "country.year"]
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("countryyr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$countryyr <- d[1, "country.year"]
View(p)
for (c in 1:length(countries)) {
d <- wvs %>%
filter(wvs$country.year == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("countryyr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$countryyr <- d[1, "country.year"]
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(d$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(d$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "> High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p2, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
}
View(data_predict)
write.csv(data_predict, file = "20141209_data_forapp.csv")
countries
