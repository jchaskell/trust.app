plot(gam1,se=T)
gam2=gam(I(wage>250)~s(age,df=4)+s(year,df=4)+education,data=Wage,family=binomial)
plot(gam2)
gam2a=gam(I(wage>250)~s(age,df=4)+year+education,data=Wage,family=binomial)
anova(gam2a,gam2,test="Chisq")
par(mfrow=c(1,3))
lm1=lm(wage~ns(age,df=4)+ns(year,df=4)+education,data=Wage)
plot.gam(lm1,se=T)
load("C:/Users/j/Downloads/7.R.RData")
plot(y, x)
par(mfrow=1)
plot(y, x)
lm(y ~ x)
m <- lm(y ~ x)
summary(m)
m2 <- lm(y ~ poly(x, 2))
summary(m2)
m2 <- lm(y ~ x + I(x^2))
summary(m2)
plot(y, x)
1998 - 18
1290/20
4*(0.9+0.8*0.5+0.75*0.5)
12*0.5+12*0.25
0.9*4*(0.25+0.2)
0.5*12*(0.25)
6*0.65*(0.5*0.75+0.75*0.25)
6*0.65*(0.5*0.75*2+2*0.75*0.25)
0.75*3*(0.5*0.65*2+2*0.7*0.35)
0.7*6*(2*0.3*0.9+2*0.85*0.1)
0.9*3*(2*0.7*0.7 + 2*0.3*0.8)
41315/11000000
150/750
(5-4)^2 + (3-4)^2 + 1 + 1
-2 + 0.5*6
4*16
64+32
64+32+4*32
2*8+2*32
(7921+5184+3336+4761)/4
4761-5300.5
7921-3336
-539.5/4585
(89+72+94+69)/4
8/(94-69)
(7921+5184+8836+4761)/4
(4761-6675.5)/(8836-4761)
(7921+5184+8836+4761)/4
(5184-6675.5)/(8836-4761)
load(url("http://www-stat.stanford.edu/~tibs/ElemStatLearn/datasets/ESL.mixture.rda"))
attach(ESL.mixture)
plot(x,col=y+1)
dat=data.frame(y=factor(y),x)
fit=svm(factor(y)~.,data=dat,scale=FALSE,kernel="radial",cost=5)
library(e1071)
dat=data.frame(y=factor(y),x)
fit=svm(factor(y)~.,data=dat,scale=FALSE,kernel="radial",cost=5)
xgrid=expand.grid(X1=px1,X2=px2)
ygrid=predict(fit,xgrid)
plot(xgrid,col=as.numeric(ygrid),pch=20,cex=.2)
points(x,col=y+1,pch=19)
func=predict(fit,xgrid,decision.values=TRUE)
func=attributes(func)$decision
xgrid=expand.grid(X1=px1,X2=px2)
ygrid=predict(fit,xgrid)
plot(xgrid,col=as.numeric(ygrid),pch=20,cex=.2)
points(x,col=y+1,pch=19)
contour(px1,px2,matrix(func,69,99),level=0,add=TRUE)
contour(px1,px2,matrix(prob,69,99),level=.5,add=TRUE,col="blue",lwd=2) #thispredicts the function itself from the data
6*4*365
((1.01)^3 + 0.99^3)/0.02
((1.01)^3 + 0.99^3))/0.02
((1.01)^3 + (0.99)^3))/0.02
((1.01)^3 + (0.99)^3)/0.02
1.01^3
1.01^3 +0.99^3
2.006/0.02
((1.01)^3 - (0.99)^3)/0.02
(2*1.01^3 + 2 - 2*0.99^3 - 2)/0.02
84/(85+15)
85/(85+15)
85/(85+890)
p <- 85/(85+890)
r <- 85/(85+15)
(2*p*4)/(p + r)
p <- 85/(85+890)
(2*p*r)/(p+r)
install.packages('RH2')
install.packages('sqldf')
install.packages("Rtools")
install.packages("shiny")
library(devtools)
install.packages("devtools")
Sys.getenv("PATH")
Sys.getenv("PATH")
system()
system('g++ -v')
Sys.getenv('PATH')
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
z <- makeVector()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
y <- cachemean()
a <- 1:100000
a <- rnorm(10000000)
z <- cachemean(a)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(solve) m <<- solve
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## cacheSolve computes the inverse of the matrix. If the inverse has already
## been calculated, then it retrieves it from the cache
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
d <- x$get()
m <- solve(d, ...)
x$setinverse(m)
m
}
z <- makeCacheMatrix()
c <- c(8, 3, 0, 10, 4, 6, -2, 8, 9)
c <- matrix(c, 3)
z$get(c)
z$set(c)
z$get()
cacheSolve(z)
z$get()*cacheSolve(z)
10000^-1
z$set(matrix(rnorm(10000), 10000))
25000*.015 + 20
install.packages(c("arm", "bdsmatrix", "BH", "caTools", "data.table", "DataCombine", "DBI", "devtools", "e1071", "foreign", "formatR", "Formula", "gdata", "ggplot2", "glmnet", "gplots", "gsubfn", "gtools", "highr", "htmltools", "httpuv", "httr", "knitr", "labeling", "Lahman", "lme4", "magrittr", "maptools", "markdown", "Matrix", "memoise", "mgcv", "mime", "minqa", "mnlogit", "nlme", "nnet", "plotrix", "plyr", "randomForest", "Rcpp", "RcppEigen", "RCurl", "reshape", "reshape2", "RH2", "RJDBC", "RJSONIO", "rmarkdown", "RSQLite", "Rttf2pt1", "sandwich", "scales", "shiny", "sp", "statmod", "texreg", "xtable", "zoo"))
install.packages("installr")
library(installr)
updateR()
library(shiny)
check.for.updates.R()
library(plyr)
library(dplyr)
library(ggvis)
#read in WVS data
setwd("C:/Dropbox/Projects/Dissertation/WVS/trust.app")
wvs <- read.csv(file = "wvs_20141208.csv", stringsAsFactors = FALSE)
list <- read.csv(file = "WVSw6_list.csv", stringsAsFac
setwd("C:/Dropbox/Projects/Dissertation/WVS/trust.app")
wvs <- read.csv(file = "wvs_20141208.csv", stringsAsFactors = FALSE)
list <- read.csv(file = "WVSw6_list.csv", stringsAsFactors = FALSE)
wvs <- merge(wvs, list, by = c("cid"), all.x = TRUE)
wvs <- wvs %>%
filter(is.na(country) == FALSE)
wvs$country.year <- paste(wvs$country, wvs$survey.year, sep = " - ")
countries <- unique(wvs$country.year)
countries
for (c in 1:length(countries)) {
d <- wvs %>%
filter(wvs$country.year == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("countryyr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$countryyr <- d[1, "country.year"]
p$cyr_n <- c
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(d$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(d$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "< High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p2, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
}
data_predict$category <- factor(data_predict$category, levels = c("College", "High School", "< High School"))
f <- data_predict  %>% filter(cyr_n == 5)
View(f)
d2 <- d  %>% filter(country.yr == "China.2012")
View(f)
d2 <- wvs  %>% filter(country.yr == "China.2012")
unique(wvs$country.yr)
name(wvs)
names(wvs)
unique(wvs$country.year)
d2 <- wvs  %>% filter(country.yr == "China - 2012")
d2 <- wvs  %>% filter(country.year == "China - 2012")
d <- d2
prop.table(table(d2$conf_govd, d2$college), 2)
table(d2$confgovd, d2$college)
names(d2)
mean(d2$conf_govd, na.rm = TRUE)
table(d2$conf_govd, d2$uni)
f <- d2  %>% filter(age < 30)
table(f$conf_govd, f$uni)
f <- f  %>% filter(age < 20)
table(f$conf_govd, f$uni)
table(f$conf_govd, f$hs)
china <- read.csv(file = 'wvs_auth_w6.csv')
attach(china)
china<-rename(china, c(V115 = "conf_gov", V110 = "conf_press",
V29 = "assn_party", V25 = "assn_rel", V26 = "assn_sport", V27 = "assn_culture",
V28 = "assn_labor", V31 = "assn_pro", V24 = "trust", V227 = "vote",
V84 = "polinterest", V242 = "age", V239 = "income", V241 = "year_born",
V140 = "dem_better", V127 = "polsys_leader", V128 = "polsys_experts",
V129 = "polsys_army", V130 = "polsys_democ", x028 = "employ", V262 = "year",
V214 = "national", V211 = "proud_nation", g002 = "identity2",
V240 = "sex", V57 = "marital", V248 = "edu", V250 = "live_parents", V230 = "job", V238 = "ses_eval",
V239 = "income", V253 = "town_size", V254 = "ethnicity", V2 = "cid"))
detach(china)
attach(china)
china$edu_adj <- ifelse(edu == 1 | edu == 2, 1, ifelse(edu == 3 | edu == 4, 2, ifelse(edu == 5 | edu == 6, 3,
ifelse(edu == 7, 4, ifelse(edu == 8 | edu == 9, 5, NA)))))
detach(china)
attach(china)
china$edu_grad<-ifelse(edu == 8, 1, 0)
detach(china)
#edu_adj: 5 is university, 4 is complete hs,
#employment
china <- rename(china, c(V229= "employ"))
attach(china)
china$ftemploy<-ifelse(employ == 1, 1, 0)
china$ptemploy<-ifelse(employ == 2, 1, 0)
china$retired<-ifelse(employ == 4, 1, 0)
china$housewife<-ifelse(employ == 5, 1, 0)
china$student<-ifelse(employ == 6, 1, 0)
china$unemp<-ifelse(employ == 7, 1, 0)
china$selfemploy<-ifelse(employ == 3, 1, 0)
detach(china)
attach(china)
china$conf_govd <-ifelse(conf_gov >=3, 0, ifelse(conf_gov == 1 | conf_gov == 1, 1, NA))
china$conf_pressd <-ifelse(conf_press >=3, 0, ifelse(conf_press == 1 | conf_press == 2, 1, NA))
china$polinterestd <-ifelse(polinterest >=3, 0, ifelse(polinterest == 1 | polinterest == 2, 1, NA))
china$conf_armyd <- ifelse(V109 >= 3, 0, ifelse(V109 == 1 | V109 == 2, 1, NA))
china$conf_policed <- ifelse(V113 >= 3, 0, ifelse(V113 == 1 | V113 == 2, 1, NA))
china$conf_courtsd <- ifelse(V114 >= 3, 0, ifelse(V114 == 1 | V114 == 2, 1, NA))
china$conf_polpartyd <- ifelse(V116 >= 3, 0, ifelse(V116 == 1 | V114 == 2, 1, NA))
china$conf_companiesd <- ifelse(V120 >= 3, 0, ifelse(V120 == 1 | V120 == 2, 1, NA))
china$polsys_leaderd <-ifelse(polsys_leader >=3, 0, ifelse(polsys_leader == 1 | polsys_leader == 2, 1, NA))
china$polsys_expertsd <-ifelse(polsys_experts >=3, 0, ifelse(polsys_experts == 1 | polsys_experts == 2, 1, NA))
china$polsys_democd <-ifelse(polsys_democ >=3, 0, ifelse(polsys_democ == 1 | polsys_democ == 2, 1, NA))
china$polsys_armyd <- ifelse(polsys_army >=3, 0, ifelse(polsys_army == 1 | polsys_army == 2, 1, NA))
china <- rename(china, c(V140 = "imp_dem", V141 = "dem_assessment"))
china <- rename(china, c(V217 = "newspaper", V219 = "tv", V223 = "internet", V22 = "friends"))
detach(china)
#other variables
attach(china)
china <- rename(china, c(V102 = "trust_family", V103 = "trust_neighbor", V104 = "trust_know",
V105 = "trust_meet", V106 = "trust_otherreligion", V107 = "trust_othernation",
V221 = "mobile_phone", V222 = "email", V226 = "vote_local"))
detach(china)
china <- read.csv(file = 'wvs_20141208.csv')
attach(china)
china<-rename(china, c(V115 = "conf_gov", V110 = "conf_press",
V29 = "assn_party", V25 = "assn_rel", V26 = "assn_sport", V27 = "assn_culture",
V28 = "assn_labor", V31 = "assn_pro", V24 = "trust", V227 = "vote",
V84 = "polinterest", V242 = "age", V239 = "income", V241 = "year_born",
V140 = "dem_better", V127 = "polsys_leader", V128 = "polsys_experts",
V129 = "polsys_army", V130 = "polsys_democ", x028 = "employ", V262 = "year",
V214 = "national", V211 = "proud_nation", g002 = "identity2",
V240 = "sex", V57 = "marital", V248 = "edu", V250 = "live_parents", V230 = "job", V238 = "ses_eval",
V239 = "income", V253 = "town_size", V254 = "ethnicity", V2 = "cid"))
detach(china)
library(reshape)
library(plyr)
library(ggplot2)
library(grid)
library(gridExtra)
attach(china)
china<-rename(china, c(V115 = "conf_gov", V110 = "conf_press",
V29 = "assn_party", V25 = "assn_rel", V26 = "assn_sport", V27 = "assn_culture",
V28 = "assn_labor", V31 = "assn_pro", V24 = "trust", V227 = "vote",
V84 = "polinterest", V242 = "age", V239 = "income", V241 = "year_born",
V140 = "dem_better", V127 = "polsys_leader", V128 = "polsys_experts",
V129 = "polsys_army", V130 = "polsys_democ", x028 = "employ", V262 = "year",
V214 = "national", V211 = "proud_nation", g002 = "identity2",
V240 = "sex", V57 = "marital", V248 = "edu", V250 = "live_parents", V230 = "job", V238 = "ses_eval",
V239 = "income", V253 = "town_size", V254 = "ethnicity", V2 = "cid"))
detach(china)
attach(china)
china$edu_adj <- ifelse(edu == 1 | edu == 2, 1, ifelse(edu == 3 | edu == 4, 2, ifelse(edu == 5 | edu == 6, 3,
ifelse(edu == 7, 4, ifelse(edu == 8 | edu == 9, 5, NA)))))
detach(china)
attach(china)
china$edu_grad<-ifelse(edu == 8, 1, 0)
detach(china)
#edu_adj: 5 is university, 4 is complete hs,
#employment
china <- rename(china, c(V229= "employ"))
attach(china)
china$ftemploy<-ifelse(employ == 1, 1, 0)
china$ptemploy<-ifelse(employ == 2, 1, 0)
china$retired<-ifelse(employ == 4, 1, 0)
china$housewife<-ifelse(employ == 5, 1, 0)
china$student<-ifelse(employ == 6, 1, 0)
china$unemp<-ifelse(employ == 7, 1, 0)
china$selfemploy<-ifelse(employ == 3, 1, 0)
detach(china)
attach(china)
china$conf_govd <-ifelse(conf_gov >=3, 0, ifelse(conf_gov == 1 | conf_gov == 1, 1, NA))
china$conf_pressd <-ifelse(conf_press >=3, 0, ifelse(conf_press == 1 | conf_press == 2, 1, NA))
china$polinterestd <-ifelse(polinterest >=3, 0, ifelse(polinterest == 1 | polinterest == 2, 1, NA))
china$conf_armyd <- ifelse(V109 >= 3, 0, ifelse(V109 == 1 | V109 == 2, 1, NA))
china$conf_policed <- ifelse(V113 >= 3, 0, ifelse(V113 == 1 | V113 == 2, 1, NA))
china$conf_courtsd <- ifelse(V114 >= 3, 0, ifelse(V114 == 1 | V114 == 2, 1, NA))
china$conf_polpartyd <- ifelse(V116 >= 3, 0, ifelse(V116 == 1 | V114 == 2, 1, NA))
china$conf_companiesd <- ifelse(V120 >= 3, 0, ifelse(V120 == 1 | V120 == 2, 1, NA))
china$polsys_leaderd <-ifelse(polsys_leader >=3, 0, ifelse(polsys_leader == 1 | polsys_leader == 2, 1, NA))
china$polsys_expertsd <-ifelse(polsys_experts >=3, 0, ifelse(polsys_experts == 1 | polsys_experts == 2, 1, NA))
china$polsys_democd <-ifelse(polsys_democ >=3, 0, ifelse(polsys_democ == 1 | polsys_democ == 2, 1, NA))
china$polsys_armyd <- ifelse(polsys_army >=3, 0, ifelse(polsys_army == 1 | polsys_army == 2, 1, NA))
china <- rename(china, c(V140 = "imp_dem", V141 = "dem_assessment"))
china <- rename(china, c(V217 = "newspaper", V219 = "tv", V223 = "internet", V22 = "friends"))
detach(china)
#other variables
attach(china)
china <- rename(china, c(V102 = "trust_family", V103 = "trust_neighbor", V104 = "trust_know",
V105 = "trust_meet", V106 = "trust_otherreligion", V107 = "trust_othernation",
V221 = "mobile_phone", V222 = "email", V226 = "vote_local"))
detach(china)
t <- china
t$uni <- ifelse(t$edu >= 8, 1, 0)
t$hs <- ifelse(t$edu == 5 | t$edu == 7, 1, 0)
t$lowedu <- ifelse(t$uni == 0 & t$hs == 0, 1, 0)
#models/graphs
#test with China
china <- subset(t, cid == 156)
china$age_2 <- 2012 - china$year_born
m <- glm(conf_govd ~ as.factor(sex) + age_2 + as.factor(uni) + as.factor(hs) + income + as.factor(unemp) + as.factor(polinterestd), data = china, family = "binomial")
test <- data.frame(matrix(nrow = 174, ncol = 7))
colnames(test) <- c("sex", "age_2", "uni", "hs", "income", "unemp", "polinterestd")
test$sex <- 2
test$age_2 <- seq(from = 18, to = 75, by = 1)
test$uni <- rep(c(1,0,0), each = 58)
test$hs <- rep(c(0, 1, 0), each = 58)
test$income <- mean(china$income, na.rm = TRUE)
test$unemp <- 0
test$polinterestd <- 0
test$category <- rep(c("College", "HS", "Low Edu"), each = 58)
test$conf_gov <- predict(m, newdata = test, type = "response")
p <- ggplot(test, aes(x = age_2, y = conf_gov, group = as.factor(category))) + geom_line(aes(color = category), size = 1.5) + labs(title = as.character())
p
View(test)
f <- wvs  %>% filter(country.year == "China - 2012")
d <- f
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("countryyr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$countryyr <- d[1, "country.year"]
p$cyr_n <- c
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(d$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(d$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "< High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p2, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
View(p)
m <- glm(conf_govd ~ as.factor(sex) + age_2 + as.factor(uni) + as.factor(hs) + income + as.factor(unemp) + as.factor(polinterestd), data = china, family = "binomial")
confint(m)
test <- data.frame(matrix(nrow = 174, ncol = 7))
colnames(test) <- c("sex", "age_2", "uni", "hs", "income", "unemp", "polinterestd")
test$sex <- 2
test$age_2 <- seq(from = 18, to = 75, by = 1)
test$uni <- rep(c(1,0,0), each = 58)
test$hs <- rep(c(0, 1, 0), each = 58)
test$income <- mean(china$income, na.rm = TRUE)
test$unemp <- 0
test$polinterestd <- 0
test$category <- rep(c("College", "HS", "Low Edu"), each = 58)
newdata3 <- cbind(test, predict(m, newdata = test, type = "link",
se = TRUE))
newdata3 <- within(newdata3, {
PredictedProb <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
View(newdata3)
p <- ggplot(newdata3, aes(x = age_2, y = PredictedProb)) + geom_ribbon(aes(ymin = LL, ymax = UL, fill = category), alpha = 0.2) + geom_line(aes(color = category), size = 1.5) + labs(title = "China")
p
View(p2)
data = p2
p <- ggplot(data, aes(x =age, y = predictedprob)) +
theme_bw() +
theme(#axis.line = element_line(colour = "black"),
#plot.background = element_blank(),
#                               panel.grid.minor= element_blank(),
#                               panel.grid.major.x = element_blank(),
#                               panel.grid.major.y = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = category), alpha = 0.2) +
geom_line(aes(color = category), size = 1.2) +
xlab("Age") + ylab("Probability of Trust")
print(p)
data$cyr_n
#This file creates the data for the shiny app
#packages
library(plyr)
library(dplyr)
library(ggvis)
#read in WVS data
setwd("C:/Dropbox/Projects/Dissertation/WVS/trust.app")
wvs <- read.csv(file = "wvs_20141208.csv", stringsAsFactors = FALSE)
list <- read.csv(file = "WVSw6_list.csv", stringsAsFactors = FALSE)
wvs <- merge(wvs, list, by = c("cid"), all.x = TRUE)
wvs <- wvs %>%
filter(is.na(country) == FALSE)
wvs$country.year <- paste(wvs$country, wvs$survey.year, sep = " - ")
countries <- unique(wvs$country.year)
#loop through countries, run model and create
for (c in 1:length(countries)) {
d <- wvs %>%
filter(wvs$country.year == countries[c])
#model
m <- glm(conf_govd ~ as.factor(sex) + age + as.factor(uni) + as.factor(hs) +
income + as.factor(unemp) + as.factor(polinterestd),
data = d, family = "binomial")
#build data set of predicted values
p <- data.frame(matrix(nrow = 174, ncol = 8))
colnames(p) <- c("countryyr", "sex", "age", "uni", "hs", "income", "unemp", "polinterestd")
p$countryyr <- d[1, "country.year"]
p$cyr_n <- c
p$sex <- 2
p$age <- seq(from = 18, to = 75, by = 1)
p$uni <- rep(c(1, 0, 0), each = 58)
p$hs <- rep(c(0, 1, 0), each = 58)
p$income <- mean(d$income, na.rm = TRUE)
p$unemp <- 0
p$polinterestd <- ifelse(mean(d$polinterestd, na.rm = TRUE) > 0.5, 1, 0)
p$category <- rep(c("College", "High School", "< High School"), each = 58)
p2 <- cbind(p, predict(m, newdata = p, type = "link", se = TRUE))
p2 <- within(p2, {
predictedprob <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
if(c == 1) {
data_predict <- p2
} else data_predict <- rbind(data_predict, p2)
}
data_predict$category <- factor(data_predict$category, levels = c("College", "High School", "< High School"))
write.csv(data_predict, file = "20141209_data_forapp.csv")
View(data_predict)
f <- data_predict  %>% filter(country.year == "Singapore - 2012")
f <- data_predict  %>% filter(country.yr == "Singapore - 2012")
names(data_predict)
f <- data_predict  %>% filter(countryyr == "Singapore - 2012")
View(f)
library(devtools)
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='jchaskell',
token='03717F9EC006E8F2C034C770DDCFDA50',
secret='<SECRET>')
shinyapps::setAccountInfo(name='jchaskell', token='03717F9EC006E8F2C034C770DDCFDA50', secret='9Qkmy/tmAHTGeZFURHmkMNpBucW7Eczo464Oqqif')
library(shinyapps)
getwd()
shinyapps::deployApp("C:/Dropbox/Projects/Dissertation/WVS/trust.app/trust.app.Rmd")
shinyapps::deployApp("C:/Dropbox/Projects/Dissertation/WVS/trust.app")
shinyapps::deployApp("C:/Dropbox/Projects/Dissertation/WVS/trust.app/app2")
shiny::runApp('app')
